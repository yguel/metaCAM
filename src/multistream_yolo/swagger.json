{"swagger":"2.0","basePath":"\/","paths":{"\/found":{"get":{"responses":{"200":{"description":"Success","schema":{"$ref":"#\/definitions\/AskDetection"}}},"summary":"Get the last valid detection if exists else return empty response","operationId":"get_ask_detection","parameters":[{"name":"X-Fields","in":"header","type":"string","format":"mask","description":"An optional fields mask"}],"tags":["default"]}},"\/new_camera":{"post":{"responses":{"200":{"description":"Success"}},"summary":"Add a new camera","operationId":"post_new_camera","parameters":[{"name":"payload","required":true,"in":"body","schema":{"$ref":"#\/definitions\/NewCamera"}}],"tags":["default"]}}},"info":{"title":"API for glasses detection","version":"1.0","description":"A simple API for take the last detection of glasses and add cameras"},"produces":["application\/json"],"consumes":["application\/json"],"tags":[{"name":"default","description":"Default namespace"}],"definitions":{"AskDetection":{"properties":{"name":{"type":"string","description":"The name of the camera"},"image":{"type":"string","description":"The image of the camera in png base64"},"place":{"type":"string","description":"The place of the camera"}},"type":"object"},"NewCamera":{"required":["ip","name","place"],"properties":{"name":{"type":"string","description":"Name of the camera"},"place":{"type":"string","description":"Location of the camera"},"ip":{"type":"string","description":"IP address of the camera"}},"type":"object"}},"responses":{"ParseError":{"description":"When a mask can't be parsed"},"MaskError":{"description":"When any error occurs on mask"}}}
